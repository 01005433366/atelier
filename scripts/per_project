#!python
# Copyright 2013-2016 by Luc Saffre.
# License: BSD, see LICENSE for more details.

from __future__ import print_function
import os
import subprocess
import argparse

from atelier.projects import load_projects
from argh import dispatch_command, arg, CommandError

@dispatch_command
@arg('cmd', 
     nargs=argparse.REMAINDER,
     help="The command to run on every project.")
@arg('-v', '--voice',
     help='Speak the result when terminated.')
@arg('-s', '--start',
     help='Start from that project, skip those before.')
@arg('-u', '--until',
     help='Only until that project, skip those after.')
@arg('-l', '--list', default=False, dest='showlist',
     help='Show list of projects.')
def main(voice=False, start=None, until=None, showlist=False, *cmd):
    """Execute a shell command in the root directory of each project,
stopping upon the first error.

The projects are processed in the order defined in your
`~/.atelier/config.py` file.

Examples::

  $ per_project inv test 
  $ per_project -s noi inv test
  $ per_project git st
  $ per_project inv ci

    """
    from atelier.projects import load_projects
    if showlist:
        from atelier import rstgen
        headers = (
            'Project',
            'URL',
            'Version',
            'doctrees')

        def cells(self):
            self.load_tasks()
            yield self.nickname
            yield self.SETUP_INFO.get('url', None)
            yield self.SETUP_INFO.get('version', '')
            yield ', '.join(self.doc_trees)

        print(rstgen.table(headers, [
            tuple(cells(p)) for p in load_projects()]))
        return
            
    if len(cmd) == 0:
        raise CommandError("You must specify a command!")

    def saymsg(msg):
        if voice:
            msg = msg.replace("'", "\'")
            cmd = ("espeak", "'{}'".format(msg))
            subprocess.call(cmd)

    skipping = start is not None
    for prj in load_projects():
        if start and prj.nickname == start:
            skipping = False
        if skipping:
            continue
        if until and prj.nickname == until:
            skipping = True
        print("==== %s ====" % prj.nickname)
        os.chdir(prj.root_dir)
        rv = subprocess.call(cmd, cwd=prj.root_dir)
        if rv:
            msg = "%s ended with error %s in project %s" % (
                ' '.join(cmd), rv, prj.nickname)
            saymsg(msg)
            raise CommandError(msg)

    msg = "Successfully terminated {} for all projects"
    msg = msg.format(cmd)
    saymsg(msg)
